{
	"Typescript react component": {
		"prefix": "tsrc",
		"body": [
			"import * as React from 'react';",
			"",
			"interface ${name:ComponentName}Props {};",
			"",
			"interface ${name:ComponentName}State {};",
			"",
			"class ${name:ComponentName} extends React.Component<${name:ComponentName}Props, ${name:ComponentName}State> {",
			"	public render(): JSX.Element {",
			"		return (<span>${name:ComponentName}</span>);",
			"	}",
			"}",
			"",
			"export default ${name:ComponentName};",
			""
		]
	},
	"Typescript react-redux component": {
		"prefix": "tsrrc",
		"body": [
			"import * as React from 'react';",
			"import { connect } from 'react-redux';",
			"",
			"interface ${name:ComponentName}Props {};",
			"",
			"interface ${name:ComponentName}State {};",
			"",
			"class ${name:ComponentName} extends React.Component<${name:ComponentName}Props, ${name:ComponentName}State> {",
			"	public render(): JSX.Element {",
			"		return (<span>${name:ComponentName}</span>);",
			"	}",
			"}",
			"",
			"export default connect()(${name:ComponentName});",
			""
		]
	},
	"Typescript react-redux component with implemented connect": {
		"prefix": "tsrrci",
		"body": [
			"import * as React from 'react';",
			"import { connect } from 'react-redux';",
			"",
			"interface ${name:ComponentName}Props {};",
			"",
			"interface ${name:ComponentName}State {};",
			"",
			"class ${name:ComponentName} extends React.Component<${name:ComponentName}Props, ${name:ComponentName}State> {",
			"	public render(): JSX.Element {",
			"		return (<span>${name:ComponentName}</span>);",
			"	}",
			"}",
			"",
			"export default connect(",
			"	(state) => ({",
			"		// Map state to props",
			"	}),",
			"	{",
			"		// Map dispatch to props",
			"	})(${name:ComponentName});",
			""
		]
	}
}